{"version":3,"sources":["components/ContactsForm/ContactsForm.module.scss","components/AppBar/AppBar.module.scss","components/ContactsList/ContactsListItem.module.scss","components/Message/Message.module.scss","components/ContactsList/ContactsList.module.scss","components/Filter/Filter.module.scss","animation/translateRight.module.scss","animation/translateLeft.module.scss","animation/scale.module.scss","redux/PnhonebookActions.js","redux/PhonebookReducer.js","redux/store.js","components/AppBar/AppBar.js","components/Message/Message.js","components/ContactsForm/ContactsForm.js","components/ContactsList/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","fromLocalSorage","changeFilter","contacts","createReducer","phonebookActions","state","filter","_","combineReducers","store","configureStore","reducer","phonebook","PhonebookReducer","AppBar","title","CSSTransition","in","appear","timeout","classNames","s","unmountOnExit","stage","className","wrapper","Message","Notification","text","ContactsForm","message","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","checkContactName","setTimeout","resetMessageStatus","some","contact","toLowerCase","includes","this","translateR","type","contactForm","contactForm_input","contactForm_input__name","required","onChange","placeholder","contactForm_input__number","pattern","contactForm_btn","Component","connect","dispatch","PhonebookActions","ownProps","item","find","onRemoveContact","contactsList_item","contactsList_item__name","contactsList_item__number","contactsList_item__btn","onClick","ContactsList","TransitionGroup","component","contactList","map","key","translateL","length","propTpes","PropTypes","arrayOf","shape","string","isRequired","Filter","onChangeFilter","filter_input","defaultProps","mapDispatchToProps","App","persistedContacts","localStorage","getItem","addFromLocal","JSON","parse","prevState","setItem","stringify","isShowFilter","scale","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d209e4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactsForm_contactForm__CP2Fm\",\"contactForm_input\":\"ContactsForm_contactForm_input__1n0Uz\",\"contactForm_input__name\":\"ContactsForm_contactForm_input__name__1qKGe\",\"contactForm_input__number\":\"ContactsForm_contactForm_input__number__GhGvL\",\"contactForm_btn\":\"ContactsForm_contactForm_btn__3dIZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppBar_wrapper__2okns\",\"title\":\"AppBar_title___wgOB\",\"appear\":\"AppBar_appear__3aPc4\",\"appearActive\":\"AppBar_appearActive__IBFod\",\"enter\":\"AppBar_enter__PsIMN\",\"enterActive\":\"AppBar_enterActive__3MuRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList_item\":\"ContactsListItem_contactsList_item__29_Xg\",\"contactsList_item__name\":\"ContactsListItem_contactsList_item__name__k45VL\",\"contactsList_item__number\":\"ContactsListItem_contactsList_item__number__nZ00y\",\"contactsList_item__btn\":\"ContactsListItem_contactsList_item__btn__3Bkgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Message_Notification__1XRH9\",\"text\":\"Message_text__3oakT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__3v72h\",\"message\":\"ContactsList_message__3QHB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2TS2K\",\"filter_input\":\"Filter_filter_input__1qt42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"translateRight_enter__1y7PN\",\"enterActive\":\"translateRight_enterActive__3Y88o\",\"exit\":\"translateRight_exit__36UNy\",\"exitActive\":\"translateRight_exitActive__1pZcx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"translateLeft_enter__SFFJS\",\"enterActive\":\"translateLeft_enterActive__3pwfb\",\"exit\":\"translateLeft_exit__2Yv_e\",\"exitActive\":\"translateLeft_exitActive__3fIWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"scale_enter__2XNFl\",\"enterActive\":\"scale_enterActive__3JSdZ\",\"exit\":\"scale_exit__39kJk\",\"exitActive\":\"scale_exitActive__1GmUk\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"contacts/addContact\", (name, number) => ({\r\n  payload: { id: uuidv4(), name, number },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/deleteContact\");\r\nconst fromLocalSorage = createAction(\"contacts/fromLocalSorage\");\r\nconst changeFilter = createAction(\"contacs/change-filter\");\r\n\r\n// const addContact = (name, number) => {\r\n//   return {\r\n//     type: \"contacts/addContact\",\r\n//     payload: { id: uuidv4(), name, number },\r\n//   };\r\n// };\r\n\r\n// const deleteContact = (contactId) => {\r\n//   return {\r\n//     type: \"contacts/deleteContact\",\r\n//     payload: {\r\n//       contactId,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// const fromLocalSorage = (contacts) => {\r\n//   return {\r\n//     type: \"contacts/fromLocalSorage\",\r\n//     payload: { contacts },\r\n//   };\r\n// };\r\n\r\n// const changeFilter = (value) => {\r\n//   return {\r\n//     type: \"contacs/change-filter\",\r\n//     payload: {\r\n//       value,\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fromLocalSorage,\r\n  changeFilter,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport phonebookActions from \"./PnhonebookActions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [phonebookActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [phonebookActions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [phonebookActions.fromLocalSorage]: (state, { payload }) => [\r\n    ...state,\r\n    ...payload,\r\n  ],\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [phonebookActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const contactsReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActions.addContact.type: {\r\n//       return [...state, payload];\r\n//     }\r\n//     case phonebookActions.deleteContact.type: {\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     }\r\n//     case phonebookActions.fromLocalSorage.type: {\r\n//       return [...state, ...payload];\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case phonebookActions.changeFilter.type:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","// import { createStore, combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport PhonebookReducer from \"./PhonebookReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: PhonebookReducer,\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n\r\nconst store = configureStore({\r\n  reducer: { phonebook: PhonebookReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./AppBar.module.scss\";\r\n\r\nconst AppBar = ({ title }) => {\r\n  return (\r\n    <CSSTransition in={true} appear timeout={500} classNames={s} unmountOnExit>\r\n      {(stage) => {\r\n        return (\r\n          <div className={s.wrapper}>\r\n            <CSSTransition\r\n              in={stage === \"entered\"}\r\n              timeout={500}\r\n              classNames={s}\r\n              unmountOnExit\r\n            >\r\n              <h1 className={s.title}>{title}</h1>\r\n            </CSSTransition>\r\n          </div>\r\n        );\r\n      }}\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nAppBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AppBar;\r\n","import React from \"react\";\r\n\r\nimport s from \"./Message.module.scss\";\r\n\r\nconst Message = () => {\r\n  return (\r\n    <div className={s.Notification}>\r\n      <p className={s.text}>Contact alredy exist!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport PhonebookActions from \"../../redux/PnhonebookActions\";\r\nimport Message from \"../Message/Message\";\r\n\r\nimport s from \"./ContactsForm.module.scss\";\r\nimport translateR from \"../../animation/translateRight.module.scss\";\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    message: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n\r\n    if (this.checkContactName(contacts, name)) {\r\n      this.setState({ message: true });\r\n      setTimeout(() => {\r\n        this.resetMessageStatus();\r\n      }, 1500);\r\n    } else {\r\n      onSubmit(name, number);\r\n    }\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  checkContactName = (contacts, name) => {\r\n    return contacts.some((contact) =>\r\n      contact.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n  };\r\n\r\n  resetMessageStatus = () => {\r\n    this.setState({\r\n      message: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, message } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={message}\r\n          classNames={translateR}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Message />\r\n        </CSSTransition>\r\n\r\n        <form\r\n          type=\"submit\"\r\n          className={s.contactForm}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <label className={s.contactForm_input}>\r\n            Name\r\n            <input\r\n              type=\"name\"\r\n              name=\"name\"\r\n              className={s.contactForm_input__name}\r\n              required\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter contact name\"\r\n            />\r\n          </label>\r\n          <label className={s.contactForm_input}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              className={s.contactForm_input__number}\r\n              required\r\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              placeholder=\"000-00-00\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.contactForm_btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.phonebook.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmit: (name, number) =>\r\n      dispatch(PhonebookActions.addContact(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PhonebookActions from \"../../redux/PnhonebookActions\";\r\n\r\nimport s from \"./ContactsListItem.module.scss\";\r\n\r\nconst ContactsListItem = ({ name, number, onRemoveContact }) => {\r\n  return (\r\n    <li className={s.contactsList_item}>\r\n      <p className={s.contactsList_item__name}>{name}</p>\r\n      <p className={s.contactsList_item__number}>{number}</p>\r\n      <button\r\n        type=\"button\"\r\n        className={s.contactsList_item__btn}\r\n        onClick={onRemoveContact}\r\n      >\r\n        ×\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.phonebook.contacts.find((item) => item.id === ownProps.id);\r\n  return {\r\n    ...item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () => dispatch(PhonebookActions.deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContactListItem from \"./ContactsListItem\";\r\n\r\nimport s from \"./ContactsList.module.scss\";\r\nimport translateL from \"../../animation/translateLeft.module.scss\";\r\n\r\nconst ContactsList = ({ contacts }) => {\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\" className={s.contactList}>\r\n        {contacts.map(({ id }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={translateL}>\r\n            <ContactListItem key={id} id={id} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n      {!(contacts.length > 0) && (\r\n        <p className={s.message}>You have no contacts. Try to add new.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nContactsList.propTpes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { contacts, filter } = state.phonebook;\r\n\r\n  const visibleContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PhonebookActions from \"../../redux/PnhonebookActions\";\r\n\r\nimport s from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      <label className={s.filter}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filter_input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          placeholder=\"Enter name\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filter: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state.phonebook.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: PhonebookActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AppBar from \"../AppBar/AppBar\";\r\nimport ContactsForm from \"../ContactsForm/ContactsForm\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport PhonebookActions from \"../../redux/PnhonebookActions\";\r\n\r\nimport scale from \"../../animation/scale.module.scss\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (persistedContacts) {\r\n      this.props.addFromLocal(JSON.parse(persistedContacts));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.contacts !== this.props.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n\r\n    const isShowFilter = contacts.length > 1;\r\n\r\n    return (\r\n      <>\r\n        <AppBar title=\"Phonebook\" />\r\n\r\n        <section className=\"container\">\r\n          <ContactsForm />\r\n\r\n          <CSSTransition\r\n            in={isShowFilter}\r\n            classNames={scale}\r\n            timeout={250}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n\r\n          <ContactsList />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.phonebook.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFromLocal: (contacts) =>\r\n      dispatch(PhonebookActions.fromLocalSorage(contacts)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./redux/store\";\r\nimport App from \"./components/App/App\";\r\n\r\nimport \"./base.scss\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}